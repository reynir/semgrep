=== command
SEMGREP_APP_TOKEN="fake_key" SEMGREP_USER_AGENT_APPEND="pytest" SEMGREP_SETTINGS_FILE="<MASKED>" SEMGREP_VERSION_CACHE_PATH="<MASKED>" SEMGREP_ENABLE_VERSION_CHECK="0" SEMGREP_SEND_METRICS="off" semgrep ci --no-suppress-errors --sarif
=== end of command

=== exit code
1
=== end of exit code

=== stdout - plain
{
  "$schema": "https://docs.oasis-open.org/sarif/sarif/v2.1.0/os/schemas/sarif-schema-2.1.0.json",
  "runs": [
    {
      "invocations": [
        {
          "executionSuccessful": true,
          "toolExecutionNotifications": []
        }
      ],
      "results": [
        {
          "fingerprints": {
            "matchBasedId/v1": "('a == a', PosixPath('foo.py'), 'eqeq-bad')_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "foo.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 11,
                  "endLine": 4,
                  "snippet": {
                    "text": "    a == a"
                  },
                  "startColumn": 5,
                  "startLine": 4
                }
              }
            }
          ],
          "message": {
            "text": "useless comparison"
          },
          "properties": {},
          "ruleId": "eqeq-bad"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "('a == a', PosixPath('foo.py'), 'eqeq-bad')_1"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "foo.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 11,
                  "endLine": 5,
                  "snippet": {
                    "text": "    a == a"
                  },
                  "startColumn": 5,
                  "startLine": 5
                }
              }
            }
          ],
          "message": {
            "text": "useless comparison"
          },
          "properties": {},
          "ruleId": "eqeq-bad"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "('a == a', PosixPath('foo.py'), 'eqeq-bad')_2"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "foo.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 11,
                  "endLine": 6,
                  "snippet": {
                    "text": "    a == a  # nosemgrep"
                  },
                  "startColumn": 5,
                  "startLine": 6
                }
              }
            }
          ],
          "message": {
            "text": "useless comparison"
          },
          "properties": {},
          "ruleId": "eqeq-bad",
          "suppressions": [
            {
              "kind": "inSource"
            }
          ]
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "('a == a', PosixPath('foo.py'), 'eqeq-bad')_3"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "foo.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 11,
                  "endLine": 7,
                  "snippet": {
                    "text": "    a == a"
                  },
                  "startColumn": 5,
                  "startLine": 7
                }
              }
            }
          ],
          "message": {
            "text": "useless comparison"
          },
          "properties": {},
          "ruleId": "eqeq-bad"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "('x == x', PosixPath('foo.py'), 'eqeq-bad')_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "foo.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 11,
                  "endLine": 9,
                  "snippet": {
                    "text": "    x == x  # nosemgrep"
                  },
                  "startColumn": 5,
                  "startLine": 9
                }
              }
            }
          ],
          "message": {
            "text": "useless comparison"
          },
          "properties": {},
          "ruleId": "eqeq-bad",
          "suppressions": [
            {
              "kind": "inSource"
            }
          ]
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "('y == y', PosixPath('foo.py'), 'eqeq-bad')_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "foo.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 11,
                  "endLine": 11,
                  "snippet": {
                    "text": "    y == y"
                  },
                  "startColumn": 5,
                  "startLine": 11
                }
              }
            }
          ],
          "message": {
            "text": "useless comparison"
          },
          "properties": {},
          "ruleId": "eqeq-bad"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "('z == z', PosixPath('foo.py'), 'eqeq-bad')_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "foo.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 11,
                  "endLine": 13,
                  "snippet": {
                    "text": "    z == z  # nosemgrep"
                  },
                  "startColumn": 5,
                  "startLine": 13
                }
              }
            }
          ],
          "message": {
            "text": "useless comparison"
          },
          "properties": {},
          "ruleId": "eqeq-bad",
          "suppressions": [
            {
              "kind": "inSource"
            }
          ]
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "('x == 5', PosixPath('foo.py'), 'eqeq-five')_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "foo.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 11,
                  "endLine": 15,
                  "snippet": {
                    "text": "    x == 5"
                  },
                  "startColumn": 5,
                  "startLine": 15
                }
              }
            }
          ],
          "message": {
            "text": "useless comparison to 5"
          },
          "properties": {},
          "ruleId": "eqeq-five"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "('y == 5', PosixPath('foo.py'), 'eqeq-five')_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "foo.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 11,
                  "endLine": 16,
                  "snippet": {
                    "text": "    y == 5  # nosemgrep"
                  },
                  "startColumn": 5,
                  "startLine": 16
                }
              }
            }
          ],
          "message": {
            "text": "useless comparison to 5"
          },
          "properties": {},
          "ruleId": "eqeq-five",
          "suppressions": [
            {
              "kind": "inSource"
            }
          ]
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "('baz == 4', PosixPath('foo.py'), 'eqeq-four')_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "foo.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 13,
                  "endLine": 18,
                  "snippet": {
                    "text": "    baz == 4  # nosemgrep"
                  },
                  "startColumn": 5,
                  "startLine": 18
                }
              }
            }
          ],
          "message": {
            "text": "useless comparison to 4"
          },
          "properties": {},
          "ruleId": "eqeq-four",
          "suppressions": [
            {
              "kind": "inSource"
            }
          ]
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "('baz == 4', PosixPath('foo.py'), 'eqeq-four')_1"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "foo.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 13,
                  "endLine": 19,
                  "snippet": {
                    "text": "    baz == 4"
                  },
                  "startColumn": 5,
                  "startLine": 19
                }
              }
            }
          ],
          "message": {
            "text": "useless comparison to 4"
          },
          "properties": {},
          "ruleId": "eqeq-four"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "('b == b', PosixPath('foo.py'), 'eqeq-bad')_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "foo.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 11,
                  "endLine": 23,
                  "snippet": {
                    "text": "    b == b # Triage ignored by syntactic_id"
                  },
                  "startColumn": 5,
                  "startLine": 23
                }
              }
            }
          ],
          "message": {
            "text": "useless comparison"
          },
          "properties": {},
          "ruleId": "eqeq-bad"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "('danger sink(d2)', PosixPath('foo.py'), 'taint-test')_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "foo.py",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 13,
                  "endLine": 27,
                  "snippet": {
                    "text": "    sink(d2)"
                  },
                  "startColumn": 5,
                  "startLine": 27
                }
              }
            }
          ],
          "message": {
            "text": "unsafe use of danger"
          },
          "properties": {},
          "ruleId": "taint-test"
        },
        {
          "fingerprints": {
            "matchBasedId/v1": "('', PosixPath('poetry.lock'), 'supply-chain1')_0"
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "poetry.lock",
                  "uriBaseId": "%SRCROOT%"
                },
                "region": {
                  "endColumn": 0,
                  "endLine": 2,
                  "snippet": {
                    "text": "name = \"badlib\""
                  },
                  "startColumn": 0,
                  "startLine": 2
                }
              }
            }
          ],
          "message": {
            "text": "found a dependency"
          },
          "properties": {
            "exposure": "reachable"
          },
          "ruleId": "supply-chain1"
        }
      ],
      "tool": {
        "driver": {
          "name": "Semgrep OSS",
          "rules": [
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "useless comparison"
              },
              "help": {
                "markdown": "useless comparison\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/eqeq-bad)\n",
                "text": "useless comparison"
              },
              "helpUri": "https://semgrep.dev/r/eqeq-bad",
              "id": "eqeq-bad",
              "name": "eqeq-bad",
              "properties": {
                "precision": "very-high",
                "tags": []
              },
              "shortDescription": {
                "text": "Semgrep Finding: eqeq-bad"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "useless comparison to 5"
              },
              "help": {
                "markdown": "useless comparison to 5\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/eqeq-five)\n",
                "text": "useless comparison to 5"
              },
              "helpUri": "https://semgrep.dev/r/eqeq-five",
              "id": "eqeq-five",
              "name": "eqeq-five",
              "properties": {
                "precision": "very-high",
                "tags": []
              },
              "shortDescription": {
                "text": "Semgrep Finding: eqeq-five"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "useless comparison to 4"
              },
              "help": {
                "markdown": "useless comparison to 4\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/eqeq-four)\n",
                "text": "useless comparison to 4"
              },
              "helpUri": "https://semgrep.dev/r/eqeq-four",
              "id": "eqeq-four",
              "name": "eqeq-four",
              "properties": {
                "precision": "very-high",
                "tags": []
              },
              "shortDescription": {
                "text": "Semgrep Finding: eqeq-four"
              }
            },
            {
              "defaultConfiguration": {
                "level": "error"
              },
              "fullDescription": {
                "text": "found a dependency"
              },
              "help": {
                "markdown": "found a dependency\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/-/advisories/supply-chain1)\n",
                "text": "found a dependency"
              },
              "helpUri": "https://semgrep.dev/-/advisories/supply-chain1",
              "id": "supply-chain1",
              "name": "supply-chain1",
              "properties": {
                "precision": "very-high",
                "tags": []
              },
              "shortDescription": {
                "text": "Semgrep Finding: supply-chain1"
              }
            },
            {
              "defaultConfiguration": {
                "level": "warning"
              },
              "fullDescription": {
                "text": "unsafe use of danger"
              },
              "help": {
                "markdown": "unsafe use of danger\n\n<b>References:</b>\n - [Semgrep Rule](https://semgrep.dev/r/taint-test)\n",
                "text": "unsafe use of danger"
              },
              "helpUri": "https://semgrep.dev/r/taint-test",
              "id": "taint-test",
              "name": "taint-test",
              "properties": {
                "precision": "very-high",
                "tags": []
              },
              "shortDescription": {
                "text": "Semgrep Finding: taint-test"
              }
            }
          ],
          "semanticVersion": "placeholder"
        }
      }
    }
  ],
  "version": "2.1.0"
}
=== end of stdout - plain

=== stderr - plain


┌────────────────┐
│ Debugging Info │
└────────────────┘

  SCAN ENVIRONMENT
  versions    - semgrep <MASKED> on python <MASKED>
  environment - running in environment git, triggering event is unknown

  CONNECTION
  Initializing scan (deployment=org_name, scan_id=12345)
  Enabled products: Code, Supply Chain

┌─────────────┐
│ Scan Status │
└─────────────┘
  Scanning 4 files tracked by git with 4 Code rules, 3 Supply Chain rules:


  CODE RULES
  Scanning 1 file with 4 python rules.

  SUPPLY CHAIN RULES
  Scanning 1 file.


┌──────────────┐
│ Scan Summary │
└──────────────┘
Some files were skipped or only partially analyzed.
  Scan was limited to files tracked by git.

CI scan completed successfully.
  Found 14 findings (11 blocking) from 7 rules.
  Uploading scan results
  Finalizing scan           View results in Semgrep Cloud Platform:
    https://semgrep.dev/orgs/org_name/findings
    https://semgrep.dev/orgs/org_name/supply-chain
  Has findings for blocking rules so exiting with code 1
  semgrep.dev is suggesting a non-zero exit code (Test Reason)

=== end of stderr - plain